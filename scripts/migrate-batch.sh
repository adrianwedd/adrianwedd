#!/bin/bash

# Batch Migration Script for GitHub Issues
# Migrates tasks.yml to GitHub Issues in controlled batches

echo "🚀 GitHub Issues Migration - Batch Mode"
echo "======================================"
echo ""

# Check prerequisites
if ! command -v gh &> /dev/null; then
    echo "❌ GitHub CLI not found. Please install gh first."
    exit 1
fi

if ! gh auth status &> /dev/null; then
    echo "❌ GitHub CLI not authenticated. Please run 'gh auth login' first."
    exit 1
fi

echo "✅ GitHub CLI ready"
echo "✅ Authentication verified"
echo ""

# Migration options
echo "Select migration batch:"
echo "1. Test Coverage Tasks (15 tasks)"
echo "2. Enhancement Tasks (20 tasks)"  
echo "3. High Priority Tasks Only (7 tasks)"
echo "4. All Tasks (35 tasks)"
echo "5. Single Test Task"
echo ""

read -p "Enter choice (1-5): " choice

case $choice in
    1)
        echo "📝 Migrating Test Coverage Tasks..."
        ./migrate-to-github.sh | head -50  # First 15 tasks
        ;;
    2) 
        echo "🎯 Migrating Enhancement Tasks..."
        ./migrate-to-github.sh | tail -n +60  # Enhancement tasks section
        ;;
    3)
        echo "⚡ Migrating High Priority Tasks Only..."
        # Create sample high priority tasks
        gh issue create --repo "adrianwedd/adrianwedd" --title "Set up pytest-cov test coverage infrastructure" --body "## Task Description
Install and configure pytest-cov for comprehensive test coverage tracking.
Set up coverage configuration files and reporting mechanisms.

## Priority: HIGH
## Acceptance Criteria
- pytest-cov installed and configured
- .coveragerc configuration file created  
- Coverage reporting integrated into test suite
- Baseline coverage measurement established

Generated by Claude Code task migration" --label "type: task","priority: high","agent: claude" --assignee "adrianwedd"

        sleep 3
        
        gh issue create --repo "adrianwedd/adrianwedd" --title "Implement comprehensive tests for terminal.js core functionality" --body "## Task Description
Create comprehensive unit tests for terminal.js covering command execution,
input handling, output formatting, and core terminal operations.

## Priority: HIGH  
## Acceptance Criteria
- Command execution pipeline tested (>90% coverage)
- Input validation and sanitization tested
- Output formatting methods tested
- Error handling paths covered
- History management tested

Generated by Claude Code task migration" --label "type: task","priority: high","agent: claude" --assignee "adrianwedd"

        sleep 3

        gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced command history with search and filtering" --body "## Task Description
Enhance command history with advanced search, filtering, timestamps,
and contextual suggestions based on usage patterns.

## Priority: HIGH
## Acceptance Criteria
- History search with regex and fuzzy matching
- Command frequency analysis and suggestions
- History filtering by date, command type, success/failure
- Export/import history functionality
- Session-based history grouping

Generated by Claude Code task migration" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"

        echo "✅ High priority tasks created"
        ;;
    4)
        echo "🔄 Migrating ALL Tasks (35 tasks)..."
        echo "⚠️  This will create 35 GitHub Issues."
        read -p "Are you sure? (y/N): " confirm
        if [[ $confirm == [yY] ]]; then
            ./migrate-to-github.sh
        else
            echo "Migration cancelled."
        fi
        ;;
    5)
        echo "🧪 Creating single test task..."
        gh issue create --repo "adrianwedd/adrianwedd" --title "Test Migration: Sample Task" --body "## Test Task
This is a test task to validate the migration process.

## Details
- Generated from batch migration script
- Used to test GitHub issues integration
- Can be closed after validation

Generated by Claude Code batch migration testing" --label "type: task","priority: low","agent: claude" --assignee "adrianwedd"
        echo "✅ Test task created"
        ;;
    *)
        echo "❌ Invalid choice. Exiting."
        exit 1
        ;;
esac

echo ""
echo "🎉 Migration batch complete!"
echo "📋 View issues at: https://github.com/adrianwedd/adrianwedd/issues"
echo ""