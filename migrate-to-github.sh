#!/bin/bash

# GitHub Issues Migration Script
# Generated from tasks.yml
# Total tasks: 35

echo "🚀 Starting GitHub Issues migration..."
echo ""

# Test Coverage Tasks (15 tasks)
echo "📝 Creating Test Coverage Tasks..."
echo "Creating task 1/15: Set up pytest-cov test coverage infrastructure"
gh issue create --repo "adrianwedd/adrianwedd" --title "Set up pytest-cov test coverage infrastructure" --body "## Task Description\nInstall and configure pytest-cov for comprehensive test coverage tracking.\nSet up coverage configuration files and reporting mechanisms.\n\n## Acceptance Criteria\n- pytest-cov installed and configured\n- .coveragerc configuration file created\n- Coverage reporting integrated into test suite\n- Baseline coverage measurement established\n\n## Task Details\n- **ID**: test-001\n- **Section**: tasks\n- **Priority**: high\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 2/15: Create comprehensive test strategy and coverage targets"
gh issue create --repo "adrianwedd/adrianwedd" --title "Create comprehensive test strategy and coverage targets" --body "## Task Description\nDefine test coverage strategy, identify critical code paths, and establish\ncoverage targets for different components of the terminal interface.\n\n## Acceptance Criteria\n- Test strategy document created\n- Coverage targets defined per module (>80% overall)\n- Critical code paths identified and prioritized\n- Test categories defined (unit, integration, e2e)\n\n## Task Details\n- **ID**: test-002\n- **Section**: tasks\n- **Priority**: high\n- **Type**: documentation\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: documentation","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 3/15: Implement comprehensive tests for terminal.js core functionality"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement comprehensive tests for terminal.js core functionality" --body "## Task Description\nCreate comprehensive unit tests for terminal.js covering command execution,\ninput handling, output formatting, and core terminal operations.\n\n## Acceptance Criteria\n- Command execution pipeline tested (>90% coverage)\n- Input validation and sanitization tested\n- Output formatting methods tested\n- Error handling paths covered\n- History management tested\n\n## Task Details\n- **ID**: test-003\n- **Section**: tasks\n- **Priority**: high\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 4/15: Add comprehensive tests for GitHubTaskManager class"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add comprehensive tests for GitHubTaskManager class" --body "## Task Description\nTest all methods in GitHubTaskManager including config loading, YAML parsing,\nAI categorization, and GitHub CLI command generation.\n\n## Acceptance Criteria\n- Config loading and parsing tested (>95% coverage)\n- AI categorization algorithms tested\n- Command generation tested with mocked inputs\n- Error handling for API failures tested\n- Template formatting tested\n\n## Task Details\n- **ID**: test-004\n- **Section**: tasks\n- **Priority**: high\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 5/15: Create tests for AI service integration and caching"
gh issue create --repo "adrianwedd/adrianwedd" --title "Create tests for AI service integration and caching" --body "## Task Description\nTest AI service class functionality including prompt caching, token management,\nrequest handling, and response processing.\n\n## Acceptance Criteria\n- Prompt caching logic tested (>85% coverage)\n- Token counting and tracking tested\n- API request/response handling tested\n- Cache hit/miss scenarios covered\n- Error handling for AI service failures tested\n\n## Task Details\n- **ID**: test-005\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 6/15: Implement tests for voice interface functionality"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement tests for voice interface functionality" --body "## Task Description\nTest voice interface including wake word detection, speech recognition,\ntext-to-speech synthesis, and voice command processing.\n\n## Acceptance Criteria\n- Wake word detection logic tested\n- Speech recognition event handling tested\n- TTS synthesis parameter handling tested\n- Voice command mapping tested (>80% coverage)\n- Browser compatibility fallbacks tested\n\n## Task Details\n- **ID**: test-006\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 7/15: Add tests for music player and audio visualization"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add tests for music player and audio visualization" --body "## Task Description\nTest music player functionality, WebGL visualizations, audio synthesis,\nand particle effects systems.\n\n## Acceptance Criteria\n- Music player controls tested (play, stop, volume)\n- Audio track switching tested\n- WebGL shader initialization tested\n- Particle effect systems tested (>75% coverage)\n- Performance optimization paths tested\n\n## Task Details\n- **ID**: test-007\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 8/15: Create tests for theme system and visual effects"
gh issue create --repo "adrianwedd/adrianwedd" --title "Create tests for theme system and visual effects" --body "## Task Description\nTest theme switching, CSS custom property management, visual effects,\nand responsive design components.\n\n## Acceptance Criteria\n- Theme switching logic tested (>85% coverage)\n- CSS property management tested\n- Local storage persistence tested\n- Visual effect toggles tested\n- Responsive design breakpoints tested\n\n## Task Details\n- **ID**: test-008\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 9/15: Implement system monitor integration tests"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement system monitor integration tests" --body "## Task Description\nTest system monitor functionality including GitHub Actions integration,\nweather API calls, and real-time data updates.\n\n## Acceptance Criteria\n- GitHub Actions API integration tested\n- Weather API integration tested\n- Real-time data refresh tested\n- Monitor mode switching tested (>80% coverage)\n- Error handling for API failures tested\n\n## Task Details\n- **ID**: test-009\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 10/15: Add tests for command history and autocomplete"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add tests for command history and autocomplete" --body "## Task Description\nTest command history management, fuzzy autocomplete matching,\nand keyboard navigation functionality.\n\n## Acceptance Criteria\n- History storage and retrieval tested\n- Fuzzy matching algorithms tested\n- Keyboard event handling tested (>85% coverage)\n- Tab completion cycling tested\n- History search functionality tested\n\n## Task Details\n- **ID**: test-010\n- **Section**: tasks\n- **Priority**: low\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: low","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 11/15: Analyze coverage gaps and implement targeted tests"
gh issue create --repo "adrianwedd/adrianwedd" --title "Analyze coverage gaps and implement targeted tests" --body "## Task Description\nRun coverage analysis, identify uncovered code paths, and implement\ntargeted tests to achieve >80% overall coverage.\n\n## Acceptance Criteria\n- Coverage report generated and analyzed\n- Uncovered code paths identified and prioritized\n- Targeted tests implemented for coverage gaps\n- Overall coverage >80% achieved\n- Coverage CI/CD integration configured\n\n## Task Details\n- **ID**: test-011\n- **Section**: tasks\n- **Priority**: high\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 12/15: Set up automated coverage reporting and CI integration"
gh issue create --repo "adrianwedd/adrianwedd" --title "Set up automated coverage reporting and CI integration" --body "## Task Description\nIntegrate coverage reporting into CI/CD pipeline with automated\ncoverage badges, trend tracking, and pull request reporting.\n\n## Acceptance Criteria\n- Coverage reports generated on each CI run\n- Coverage badges added to README\n- Coverage trend tracking implemented\n- PR coverage reports automated\n- Coverage thresholds enforced in CI\n\n## Task Details\n- **ID**: test-012\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 13/15: Implement performance tests and benchmarks"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement performance tests and benchmarks" --body "## Task Description\nCreate performance tests for critical code paths, memory usage monitoring,\nand benchmark comparisons for optimization tracking.\n\n## Acceptance Criteria\n- Performance test suite created\n- Memory usage tests implemented\n- Benchmark baseline established\n- Performance regression detection configured\n- Load testing for concurrent operations\n\n## Task Details\n- **ID**: test-013\n- **Section**: tasks\n- **Priority**: low\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: low","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 14/15: Add comprehensive error handling and edge case tests"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add comprehensive error handling and edge case tests" --body "## Task Description\nTest error handling paths, edge cases, malformed inputs, and\ngraceful degradation scenarios across all components.\n\n## Acceptance Criteria\n- Error handling paths tested (>90% coverage)\n- Malformed input handling tested\n- Network failure scenarios tested\n- Browser compatibility edge cases covered\n- Graceful degradation verified\n\n## Task Details\n- **ID**: test-014\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating task 15/15: Create test utilities and mock frameworks"
gh issue create --repo "adrianwedd/adrianwedd" --title "Create test utilities and mock frameworks" --body "## Task Description\nBuild reusable test utilities, mock objects, and fixtures to support\ncomprehensive testing across all modules and reduce test duplication.\n\n## Acceptance Criteria\n- Test utility library created\n- Mock frameworks for external APIs implemented\n- Reusable test fixtures established\n- Test data generators created\n- Documentation for test utilities added\n\n## Task Details\n- **ID**: test-015\n- **Section**: tasks\n- **Priority**: medium\n- **Type**: task\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: task","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "✅ Test coverage tasks created"
echo ""

# Enhancement Tasks (20 tasks)
echo "🎯 Creating Enhancement Tasks..."
echo "Creating enhancement 1/20: Implement advanced command history with search and filtering"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced command history with search and filtering" --body "## Task Description\nEnhance command history with advanced search, filtering, timestamps,\nand contextual suggestions based on usage patterns.\n\n## Acceptance Criteria\n- History search with regex and fuzzy matching\n- Command frequency analysis and suggestions\n- History filtering by date, command type, success/failure\n- Export/import history functionality\n- Session-based history grouping\n\n## Task Details\n- **ID**: enhance-001\n- **Section**: enhancements\n- **Priority**: high\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 2/20: Add intelligent command completion with context awareness"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add intelligent command completion with context awareness" --body "## Task Description\nImplement context-aware tab completion that suggests relevant options\nbased on current state, command history, and available resources.\n\n## Acceptance Criteria\n- Dynamic completion based on terminal state\n- Command parameter completion for complex commands\n- File/directory completion for applicable commands\n- Smart suggestions based on usage patterns\n- Multi-level completion (command → subcommand → parameters)\n\n## Task Details\n- **ID**: enhance-002\n- **Section**: enhancements\n- **Priority**: high\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 3/20: Implement terminal session management and persistence"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement terminal session management and persistence" --body "## Task Description\nAdd session management capabilities including session saving/restoring,\nmultiple session support, and persistent state across browser sessions.\n\n## Acceptance Criteria\n- Session save/restore functionality\n- Multiple named sessions support\n- Persistent state across browser restarts\n- Session sharing via URLs\n- Session history and metadata tracking\n\n## Task Details\n- **ID**: enhance-003\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 4/20: Implement advanced AI conversation context management"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced AI conversation context management" --body "## Task Description\nEnhance AI chat system with better context management, conversation\nbranching, and intelligent memory of previous interactions.\n\n## Acceptance Criteria\n- Conversation context persistence across sessions\n- Conversation branching and threading\n- Intelligent context summarization\n- Related conversation suggestions\n- Context-aware response optimization\n\n## Task Details\n- **ID**: enhance-004\n- **Section**: enhancements\n- **Priority**: high\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 5/20: Add AI-powered command suggestions and error correction"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add AI-powered command suggestions and error correction" --body "## Task Description\nImplement AI-powered features for command suggestion, typo correction,\nand intelligent help based on user intent and context.\n\n## Acceptance Criteria\n- Typo detection and correction suggestions\n- Intent-based command suggestions\n- Natural language to command translation\n- Context-aware help generation\n- Learning from user correction patterns\n\n## Task Details\n- **ID**: enhance-005\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 6/20: Implement advanced prompt caching with intelligent invalidation"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced prompt caching with intelligent invalidation" --body "## Task Description\nEnhance prompt caching system with intelligent cache invalidation,\ncache warming, and performance optimization strategies.\n\n## Acceptance Criteria\n- Intelligent cache invalidation based on context changes\n- Predictive cache warming for frequently used prompts\n- Cache performance analytics and optimization\n- Distributed caching support for multiple sessions\n- Cache compression and storage optimization\n\n## Task Details\n- **ID**: enhance-006\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 7/20: Add advanced voice command processing with NLP"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add advanced voice command processing with NLP" --body "## Task Description\nEnhance voice interface with natural language processing for more\nintuitive voice commands and conversational interactions.\n\n## Acceptance Criteria\n- Natural language command interpretation\n- Voice command templates and variations\n- Contextual voice responses\n- Voice command learning and adaptation\n- Multi-step voice workflows\n\n## Task Details\n- **ID**: enhance-007\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 8/20: Implement voice profile management and personalization"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement voice profile management and personalization" --body "## Task Description\nAdd voice profile management for personalized voice recognition,\ncustom wake words, and voice-specific preferences.\n\n## Acceptance Criteria\n- User voice profile creation and training\n- Custom wake word configuration\n- Voice-specific command preferences\n- Voice recognition accuracy improvements\n- Multi-user voice support\n\n## Task Details\n- **ID**: enhance-008\n- **Section**: enhancements\n- **Priority**: low\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: low","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 9/20: Add advanced audio visualization with real-time analysis"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add advanced audio visualization with real-time analysis" --body "## Task Description\nEnhance audio visualization system with advanced FFT analysis,\nspectral visualization, and interactive audio controls.\n\n## Acceptance Criteria\n- Real-time spectral analysis and visualization\n- Interactive audio waveform controls\n- Advanced shader effects based on audio data\n- Audio-reactive particle systems\n- Customizable visualization themes\n\n## Task Details\n- **ID**: enhance-009\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 10/20: Implement music library and playlist management"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement music library and playlist management" --body "## Task Description\nAdd music library management with playlist creation, music discovery,\nand integration with external music services.\n\n## Acceptance Criteria\n- Local music library management\n- Playlist creation and management\n- Music metadata and tagging\n- Integration with music streaming APIs\n- Smart playlist generation based on preferences\n\n## Task Details\n- **ID**: enhance-010\n- **Section**: enhancements\n- **Priority**: low\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: low","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 11/20: Add dynamic theme creation and customization tools"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add dynamic theme creation and customization tools" --body "## Task Description\nImplement dynamic theme creation tools allowing users to create\nand share custom terminal themes with live preview capabilities.\n\n## Acceptance Criteria\n- Visual theme editor with live preview\n- Color palette generation and suggestions\n- Theme sharing and import/export\n- Community theme gallery\n- Accessibility validation for custom themes\n\n## Task Details\n- **ID**: enhance-011\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 12/20: Implement advanced particle effects and animations"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced particle effects and animations" --body "## Task Description\nEnhance particle effects system with physics simulation, interactive\nparticles, and performance-optimized rendering.\n\n## Acceptance Criteria\n- Physics-based particle simulation\n- Interactive particle systems responding to user input\n- Performance optimization for complex effects\n- Particle effect presets and customization\n- WebGL shader optimization and effects library\n\n## Task Details\n- **ID**: enhance-012\n- **Section**: enhancements\n- **Priority**: low\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: low","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 13/20: Add comprehensive GitHub Actions workflow management"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add comprehensive GitHub Actions workflow management" --body "## Task Description\nEnhance GitHub Actions integration with workflow creation, editing,\nand advanced monitoring capabilities from the terminal.\n\n## Acceptance Criteria\n- Visual workflow editor integrated in terminal\n- Workflow template library and suggestions\n- Real-time workflow execution monitoring\n- Workflow performance analytics\n- Integration with repository management\n\n## Task Details\n- **ID**: enhance-013\n- **Section**: enhancements\n- **Priority**: high\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 14/20: Implement advanced system monitoring with performance metrics"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced system monitoring with performance metrics" --body "## Task Description\nEnhance system monitor with detailed performance metrics, historical\ndata tracking, and predictive analytics for system health.\n\n## Acceptance Criteria\n- Detailed performance metrics collection\n- Historical data visualization and trends\n- Performance anomaly detection\n- Predictive analytics for resource usage\n- Custom metric dashboards and alerts\n\n## Task Details\n- **ID**: enhance-014\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 15/20: Add multi-API integration hub with unified interface"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add multi-API integration hub with unified interface" --body "## Task Description\nCreate unified API integration hub for managing multiple external\nservices and data sources from the terminal interface.\n\n## Acceptance Criteria\n- Unified API management interface\n- API key and credential management\n- API response caching and optimization\n- Multi-service data aggregation\n- Custom API integration wizard\n\n## Task Details\n- **ID**: enhance-015\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 16/20: Implement terminal scripting and automation framework"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement terminal scripting and automation framework" --body "## Task Description\nAdd scripting capabilities to automate complex workflows and create\ncustom commands using a built-in scripting framework.\n\n## Acceptance Criteria\n- Built-in scripting language support\n- Script editor with syntax highlighting\n- Script library and sharing system\n- Automated workflow execution\n- Script debugging and error handling\n\n## Task Details\n- **ID**: enhance-016\n- **Section**: enhancements\n- **Priority**: high\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 17/20: Add collaborative features and session sharing"
gh issue create --repo "adrianwedd/adrianwedd" --title "Add collaborative features and session sharing" --body "## Task Description\nImplement collaborative features allowing multiple users to share\nterminal sessions and work together on projects.\n\n## Acceptance Criteria\n- Real-time session sharing\n- Collaborative command execution\n- User presence and activity indicators\n- Permission-based access control\n- Session recording and playback\n\n## Task Details\n- **ID**: enhance-017\n- **Section**: enhancements\n- **Priority**: low\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: low","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 18/20: Implement advanced search and content indexing"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement advanced search and content indexing" --body "## Task Description\nAdd comprehensive search capabilities across all terminal content,\nhistory, and integrated services with intelligent indexing.\n\n## Acceptance Criteria\n- Full-text search across all terminal content\n- Intelligent content categorization and tagging\n- Search result ranking and relevance scoring\n- Saved searches and search history\n- Cross-service search integration\n\n## Task Details\n- **ID**: enhance-018\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 19/20: Enhance mobile experience with touch-optimized interface"
gh issue create --repo "adrianwedd/adrianwedd" --title "Enhance mobile experience with touch-optimized interface" --body "## Task Description\nOptimize terminal interface for mobile devices with touch-friendly\ncontrols, gesture support, and mobile-specific features.\n\n## Acceptance Criteria\n- Touch-optimized command input and navigation\n- Gesture support for common actions\n- Mobile-specific command shortcuts\n- Adaptive UI for different screen sizes\n- Mobile performance optimization\n\n## Task Details\n- **ID**: enhance-019\n- **Section**: enhancements\n- **Priority**: medium\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: medium","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "Creating enhancement 20/20: Implement comprehensive accessibility improvements"
gh issue create --repo "adrianwedd/adrianwedd" --title "Implement comprehensive accessibility improvements" --body "## Task Description\nEnhance accessibility features including screen reader support,\nkeyboard navigation, and assistive technology integration.\n\n## Acceptance Criteria\n- Full screen reader compatibility\n- Comprehensive keyboard navigation\n- High contrast and accessible color schemes\n- Voice control for accessibility\n- Assistive technology integration and testing\n\n## Task Details\n- **ID**: enhance-020\n- **Section**: enhancements\n- **Priority**: high\n- **Type**: enhancement\n\nGenerated by Claude Code task migration from tasks.yml" --label "type: enhancement","priority: high","agent: claude" --assignee "adrianwedd"
sleep 2  # Rate limiting

echo "✅ Enhancement tasks created"
echo ""
echo "🎉 Migration complete! Check GitHub Issues at:"
echo "https://github.com/adrianwedd/adrianwedd/issues"
